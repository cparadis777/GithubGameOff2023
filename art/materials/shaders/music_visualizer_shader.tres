[gd_resource type="Shader" format=3 uid="uid://rlhyg7olcms8"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Texture2DParameter;
uniform sampler2D tex_vtx_3 : source_color;
uniform sampler2D wireframeTexture : source_color;
uniform float magnitude : hint_range(0, 3, 0.10000000149012) = 0.5;



void vertex() {
// Input:5
	vec3 n_out5p0 = VERTEX;


// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_vtx_3, UV);
	float n_out3p1 = n_out3p0.r;


// MultiplyAdd:8
	float n_in8p1 = 3.00000;
	float n_in8p2 = 0.00000;
	float n_out8p0 = (n_out3p1 * n_in8p1) + n_in8p2;


// MultiplyAdd:7
	float n_in7p1 = 1.00000;
	float n_out7p0 = (n_out6p1 * n_in7p1) + n_out8p0;


// VectorCompose:2
	vec3 n_out2p0 = vec3(n_out6p0, n_out7p0, n_out6p2);


// Output:0
	VERTEX = n_out2p0;


}

void fragment() {
// UVFunc:5
	vec2 n_in5p1 = vec2(8.00000, 8.00000);
	vec2 n_in5p2 = vec2(0.00000, 0.00000);
	vec2 n_out5p0 = (UV - n_in5p2) * n_in5p1 + n_in5p2;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(wireframeTexture, n_out5p0);


// FloatParameter:7
	float n_out7p0 = magnitude;


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out2p0.xyz) * vec3(n_out7p0);


// VectorDecompose:4
	float n_out4p0 = n_out2p0.x;
	float n_out4p1 = n_out2p0.y;
	float n_out4p2 = n_out2p0.z;
	float n_out4p3 = n_out2p0.w;


// Output:0
	ALBEDO = n_out6p0;
	ALPHA = n_out4p3;


}
"
